diff --git a/BUILD.gn b/BUILD.gn
index 06870b6039..3f59637ef8 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -45,7 +45,7 @@ declare_args() {
 
   # Enable ECMAScript Internationalization API. Enabling this feature will
   # add a dependency on the ICU library.
-  v8_enable_i18n_support = true
+  v8_enable_i18n_support = is_component_build
 
   # Enable slow dchecks.
   v8_enable_slow_dchecks = false
@@ -106,6 +106,7 @@ v8_generated_peephole_source = "$target_gen_dir/bytecode-peephole-table.cc"
 v8_random_seed = "314159265"
 v8_toolset_for_shell = "host"
 
+suppress_v8 = !is_component_build
 ###############################################################################
 # Configurations
 #
@@ -114,6 +115,14 @@ config("internal_config") {
 
   include_dirs = [ "." ]
 
+  if (suppress_v8) {
+    defines = [
+      "SUPPRESS_V8_SNAPSHOT",
+      "V8_SHARED",
+      "BUILDING_V8_SHARED",
+    ]
+  }
+
   if (is_component_build) {
     defines = [ "BUILDING_V8_SHARED" ]
   }
@@ -138,6 +147,13 @@ config("libsampler_config") {
 # This config should only be applied to code using V8 and not any V8 code
 # itself.
 config("external_config") {
+  if (suppress_v8) {
+    defines = [
+      "V8_SHARED",
+      "USING_V8_SHARED",
+    ]
+  }
+
   if (is_component_build) {
     defines = [ "USING_V8_SHARED" ]
   }
@@ -742,6 +758,9 @@ source_set("v8_maybe_snapshot") {
 }
 
 v8_source_set("v8_nosnapshot") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
   visibility = [ ":*" ]  # Only targets in this file can depend on this.
 
   deps = [
@@ -764,6 +783,9 @@ v8_source_set("v8_nosnapshot") {
 }
 
 v8_source_set("v8_snapshot") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
   # Only targets in this file and the top-level visibility target can
   # depend on this.
   visibility = [
@@ -797,6 +819,10 @@ v8_source_set("v8_snapshot") {
 
 if (v8_use_external_startup_data) {
   v8_source_set("v8_external_snapshot") {
+    if (suppress_v8) {
+      set_sources_assignment_filter(["*"])
+    }
+
     visibility = [ ":*" ]  # Only targets in this file can depend on this.
 
     deps = [
@@ -821,6 +847,10 @@ if (v8_use_external_startup_data) {
 }
 
 v8_source_set("v8_base") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
+
   visibility = [ ":*" ]  # Only targets in this file can depend on this.
 
   sources = [
@@ -2122,8 +2152,10 @@ v8_source_set("v8_base") {
     ":v8_libsampler",
   ]
 
-  sources += [ v8_generated_peephole_source ]
-  deps += [ ":run_mkpeephole" ]
+  if (!suppress_v8) {
+    sources += [ v8_generated_peephole_source ]
+    deps += [ ":run_mkpeephole" ]
+  }
 
   if (is_win) {
     # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
@@ -2137,8 +2169,8 @@ v8_source_set("v8_base") {
     }
   } else {
     sources -= [
-      "src/i18n.cc",
-      "src/i18n.h",
+      # "src/i18n.cc",
+      # "src/i18n.h",
     ]
   }
 
@@ -2153,6 +2185,10 @@ v8_source_set("v8_base") {
 }
 
 v8_source_set("v8_libbase") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
+
   visibility = [ ":*" ]  # Only targets in this file can depend on this.
 
   sources = [
@@ -2286,6 +2322,10 @@ v8_source_set("v8_libbase") {
 }
 
 v8_source_set("v8_libplatform") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
+
   sources = [
     "//base/trace_event/common/trace_event_common.h",
     "include/libplatform/libplatform.h",
@@ -2315,6 +2355,10 @@ v8_source_set("v8_libplatform") {
 }
 
 v8_source_set("v8_libsampler") {
+  if (suppress_v8) {
+    set_sources_assignment_filter(["*"])
+  }
+
   sources = [
     "src/libsampler/sampler.cc",
     "src/libsampler/sampler.h",
diff --git a/src/snapshot/mksnapshot.cc b/src/snapshot/mksnapshot.cc
index f4362e5077..98c6a8db9a 100644
--- a/src/snapshot/mksnapshot.cc
+++ b/src/snapshot/mksnapshot.cc
@@ -6,6 +6,7 @@
 #include <signal.h>
 #include <stdio.h>
 
+#ifndef SUPPRESS_V8_SNAPSHOT
 #include "include/libplatform/libplatform.h"
 #include "src/assembler.h"
 #include "src/base/platform/platform.h"
@@ -133,9 +134,10 @@ char* GetExtraCode(char* filename, const char* description) {
   fclose(file);
   return chars;
 }
-
+#endif
 
 int main(int argc, char** argv) {
+#ifndef SUPPRESS_V8_SNAPSHOT
   // Make mksnapshot runs predictable to create reproducible snapshots.
   i::FLAG_predictable = true;
 
@@ -180,5 +182,6 @@ int main(int argc, char** argv) {
   V8::Dispose();
   V8::ShutdownPlatform();
   delete platform;
+#endif
   return 0;
 }
